-- Nike Launcher 

GT = {};
GT_t.ws = 0;	--????
set_recursive_metatable(GT, GT_t.generic_stationary);
set_recursive_metatable(GT.chassis, GT_t.CH_t.STATIC);

GT.visual.shape = "Launcher";
GT.visual.shape_dstr = "S_75_Launcher_p_1";
GT.ScaleOfModel = {x=0.15, y=0.15, z=0.15} --Size?

GT.toggle_alarm_state_interval = 0.01;
GT.animation_arguments.alarm_state = -1;

GT.sensor = {}
set_recursive_metatable(GT.sensor, GT_t.SN_visual)
GT.sensor.height = 2.617  -- Höhe des Sensors über dem Boden
GT.sensor.max_range_finding_target = 65000  -- Maximale Reichweite zur Zielerfassung
GT.sensor.min_range_finding_target = 500  -- Minimale Reichweite zur Zielerfassung
GT.sensor.max_alt_finding_target = 20000  -- Maximale Flughöhe des erfassten Ziels
GT.sensor.min_alt_finding_target = 50  -- Minimale Flughöhe des erfassten Ziels


--Burning after hit
GT.visual.fire_size = 0.8; --relative burning size
GT.visual.fire_pos[1] = 1.575; -- center of burn at long axis shift(meters)
GT.visual.fire_pos[2] = 0; -- center of burn shift at vertical shift(meters)
GT.visual.fire_pos[3] = 0; -- center of burn at transverse axis shift(meters)
GT.visual.fire_time = 500; --burning time (seconds)


-- weapon systems
GT.WS = {}
GT.WS.maxTargetDetectionRange = 65000  -- Maximale Zielerfassungsreichweite in Metern

local ws = GT_t.inc_ws() or 1  -- Falls `inc_ws()` fehlschlägt, setze `ws` auf 1
GT.WS[ws] = {}
GT.WS[ws].pos = {0.0, 1.7, 0.0}  -- Position des Waffensystems
GT.WS[ws].angles = {
    {math.rad(90), math.rad(0), math.rad(0), math.rad(0)},
}
GT.WS[ws].drawArgument1 = 0
GT.WS[ws].drawArgument2 = 1
GT.WS[ws].omegaY = 0.323599
GT.WS[ws].omegaZ = 0.174533
GT.WS[ws].reference_angle_Z = math.rad(30.6)
GT.WS[ws].reloadAngleY = 0.0
GT.WS[ws].reloadAngleZ = 0.0
GT.WS[ws].pidY = { p = 5, i = 0, d = 2, inn = 1 }
GT.WS[ws].pidZ = { p = 5, i = 0, d = 2, inn = 1 }


local __LN = add_launcher(GT.WS[ws], GT_t.LN_t.MISSILE_MIM14)
GT.WS[ws].LN = { __LN }  -- Stelle sicher, dass `LN` eine Tabelle ist

__LN.min_launch_angle = math.rad(90)  -- Mindestabschusswinkel
__LN.launch_delay = 5  -- Verzögerung zwischen Abschüssen
__LN.depends_on_unit = {
    { { "NASAMS_Command_Post", 1 } },
    { { "NASAMS_Radar_MPQ64F1", 1 } },
}
__LN.BR = {
    { connector_name = "POINT_ROCKET" },
}

__LN = nil;
	
GT.Name = "Nike_Hercules";
GT.DisplayName = _('Nike Hurcules');
GT.DisplayNameShort = _('N_HURC');
GT.Rate = 10;

GT.DetectionRange  = 0;
GT.ThreatRangeMin = GT.WS[1].LN[1].distanceMin;
GT.ThreatRange = GT.WS[1].LN[1].distanceMax;
GT.mapclasskey = "P0091000082";
GT.attribute = {wsType_Ground,wsType_SAM,wsType_Miss, SANikeH_LN,
				"AA_missile",
				"LR SAM",
				"SAM LL",
                };
GT.category = "Air Defence";
GT.tags  =
{
    "Air Defence",
	"Launcher",
};
GT.Countries = {"USA,GERMANY"}
